security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_API: ROLE_USER
        ROLE_ADMIN: ROLE_API
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api_refresh:
            pattern: ^/api/token/refresh
            stateless: true
            anonymous: true

        api:
            pattern: ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            pattern: ^/
            user_checker: security.user_checker
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager

            logout: true
            anonymous: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login,         role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin,             role: ROLE_ADMIN }
        - { path: ^/login$,            role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,               role: IS_AUTHENTICATED_FULLY }
        - { path: ^/,                  role: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/profile, roles: ROLE_USER }
