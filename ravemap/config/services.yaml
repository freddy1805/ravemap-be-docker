# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    container.dumper.inline_factories: true
    app_name: rav3map
    app_version: 1.0.0
    locale: 'de'
    maps_apiKey: AIzaSyBfNSFxRT1vinEadwHPbfd2EwOK1o-P-Ug

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
            - { db_table: 'ravemap__sessions' }
        calls:
            - [createTable]

    gos_web_socket.authentication.provider.custom.default:
        class: App\Websocket\Provider\AuthProvider

    App\Websocket\Topic\EventTopic:
        tags:
            - { name: gos_web_socket.topic }

    RedjanYm\FCMBundle\FCMClient:
        alias: 'redjan_ym_fcm.client'

    admin.user:
        class: App\Admin\UserAdmin
        arguments: [ ~, App\Entity\User, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, label: user.title, group: system }

    admin.event:
        class: App\Admin\EventAdmin
        arguments: [ ~, App\Entity\Event, ~, '@App\Service\GeolocationService' ]
        tags:
            - { name: sonata.admin, manager_type: orm, label: event.title, group: content }

    admin.static:
        class: App\Admin\StaticPageAdmin
        arguments: [ ~, App\Entity\StaticPage, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: static_page.title, group: content }

    admin.locale:
        class: App\Admin\LocaleAdmin
        arguments: [ ~, App\Entity\Locale, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, label: locale.title, group: system }
